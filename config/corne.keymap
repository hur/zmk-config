/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
    
    behaviors {
        am: alpha_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_MT";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
      
    combos {
        compatible = "zmk,combos";

        lpar {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <19 20>;
            timeout-ms = <25>;
            layers = <0>;
        };

        rpar {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <20 21>;
            timeout-ms = <25>;
            layers = <0>;
        };

        lbrack {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 20>;
            timeout-ms = <25>;
            layers = <0>;
        };

        rbrack {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <33 20>;
            timeout-ms = <25>;
            layers = <0>;
        };

        lbrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <8 19>;
            timeout-ms = <25>;
            layers = <0>;
        };

        rbrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <8 21>;
            timeout-ms = <25>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <21 22>;
            timeout-ms = <25>;
            layers = <0>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <13 14>;
            timeout-ms = <25>;
            layers = <0>;
        };

        squot {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <14 15>;
            timeout-ms = <25>;
            layers = <0>;
        };

        dquot {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <15 16>;
            timeout-ms = <25>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
       &kp ESC   &kp Q       &kp W        &kp E       &kp R      &kp T    &kp Y       &kp U        &kp I       &kp O     &kp P       &kp BSPC
 &mt LCTRL TAB   &kp A  &am LGUI S  &am LCTRL D  &am LALT F      &kp G    &kp H  &am RCMD J  &am RCTRL K  &am RALT L  &kp SEMI        &kp SQT
      &kp LALT   &kp Z       &kp X        &kp C       &kp V      &kp B    &kp N       &kp M    &kp COMMA     &kp DOT  &kp FSLH  &kp BACKSLASH
                                       &kp LGUI       &mo 1  &kp SPACE  &kp RET  &kp LSHIFT        &mo 2
            >;
        };

        lower_layer {
            bindings = <
       &kp ESC      &kp N1  &kp N2    &kp N3  &kp N4     &kp N5    &kp N6      &kp N7  &kp N8     &kp N9         &kp N0   &kp BSPC
 &mt LCTRL TAB     &kp TAB  &trans    &trans  &trans     &trans  &kp LEFT    &kp DOWN  &kp UP  &kp RIGHT  &kp BACKSPACE  &kp MINUS
      &kp LALT  &bt BT_CLR  &trans    &trans  &trans     &trans    &trans      &trans  &trans     &trans         &trans  &kp EQUAL
                                    &kp LGUI  &trans  &kp SPACE   &kp RET  &kp LSHIFT  &trans
            >;
        };

        raise_layer {
            bindings = <
       &kp ESC  &kp EXCL      &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET    &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
 &mt LCTRL TAB   &kp TAB  &kp LSHIFT    &trans    &trans     &trans   &kp HOME   &kp EQUAL        &kp PG_UP   &kp END  &kp BSPC  &kp GRAVE
      &kp LALT    &trans      &trans    &trans    &trans     &trans  &kp UNDER    &kp PLUS        &kp PG_DN    &trans    &trans     &trans
                                      &kp LGUI    &trans  &kp SPACE    &kp RET  &kp LSHIFT           &trans
            >;
        };

        adjust_layer {
            bindings = <
 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans                &trans                &trans      &trans  &trans  &kp C_AL_COFFEE
     &trans        &trans  &kp C_PREV  &kp C_PLAY_PAUSE    &kp C_NEXT        &trans  &trans     &kp C_VOLUME_DOWN       &kp C_VOLUME_UP  &kp C_MUTE  &trans           &trans
     &trans        &trans      &trans            &trans        &trans        &trans  &trans  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC      &trans  &trans           &trans
                                               &trans      &trans      &trans  &trans                &trans                &trans
            >;
        };
    };
};
